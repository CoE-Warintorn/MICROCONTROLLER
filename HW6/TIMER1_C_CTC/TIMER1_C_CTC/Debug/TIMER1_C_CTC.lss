
TIMER1_C_CTC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000012a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000d6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000012a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000015c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  0000019c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000069d  00000000  00000000  000001c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000610  00000000  00000000  00000861  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000021a  00000000  00000000  00000e71  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000048  00000000  00000000  0000108c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000367  00000000  00000000  000010d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000049  00000000  00000000  0000143b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001484  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 57 00 	jmp	0xae	; 0xae <__vector_11>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 69 00 	jmp	0xd2	; 0xd2 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <avr/io.h>
#include <avr/interrupt.h>

int main(void)
{
	DDRC	= 0x01;	// set PC0 as output
  80:	81 e0       	ldi	r24, 0x01	; 1
  82:	87 b9       	out	0x07, r24	; 7
	TIMSK1	= 0x02;	// compare match A interrupt enable
  84:	82 e0       	ldi	r24, 0x02	; 2
  86:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	TCCR1B	= 0x0C;	// No prescaler
  8a:	9c e0       	ldi	r25, 0x0C	; 12
  8c:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	TCCR1A	= 0x02;	// CTC mode
  90:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	cli();
  94:	f8 94       	cli
	TCNT1	= 0;
  96:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  9a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	OCR1A	= 3571;
  9e:	83 ef       	ldi	r24, 0xF3	; 243
  a0:	9d e0       	ldi	r25, 0x0D	; 13
  a2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  a6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	sei();
  aa:	78 94       	sei
  ac:	ff cf       	rjmp	.-2      	; 0xac <main+0x2c>

000000ae <__vector_11>:
	{
	}
}

ISR(TIMER1_COMPA_vect)
{
  ae:	1f 92       	push	r1
  b0:	0f 92       	push	r0
  b2:	0f b6       	in	r0, 0x3f	; 63
  b4:	0f 92       	push	r0
  b6:	11 24       	eor	r1, r1
  b8:	8f 93       	push	r24
  ba:	9f 93       	push	r25
	PORTC ^= 0x01;
  bc:	98 b1       	in	r25, 0x08	; 8
  be:	81 e0       	ldi	r24, 0x01	; 1
  c0:	89 27       	eor	r24, r25
  c2:	88 b9       	out	0x08, r24	; 8
}
  c4:	9f 91       	pop	r25
  c6:	8f 91       	pop	r24
  c8:	0f 90       	pop	r0
  ca:	0f be       	out	0x3f, r0	; 63
  cc:	0f 90       	pop	r0
  ce:	1f 90       	pop	r1
  d0:	18 95       	reti

000000d2 <_exit>:
  d2:	f8 94       	cli

000000d4 <__stop_program>:
  d4:	ff cf       	rjmp	.-2      	; 0xd4 <__stop_program>
